// <auto-generated />
using System;
using CarManagementServiceProject.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarManagementServiceProject.Migrations
{
    [DbContext(typeof(CabServiceDbContext))]
    [Migration("20221101062944_dbCreate")]
    partial class dbCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarManagementServiceProject.Models.AssignedDriverAndCab", b =>
                {
                    b.Property<int>("RaidKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RaidKey"), 1L, 1);

                    b.Property<int>("CabId")
                        .HasColumnType("int");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAssigned")
                        .HasColumnType("bit");

                    b.Property<int>("RideId")
                        .HasColumnType("int");

                    b.HasKey("RaidKey");

                    b.HasIndex("CabId");

                    b.HasIndex("DriverId");

                    b.ToTable("AssignedDriverAndCabs");
                });

            modelBuilder.Entity("CarManagementServiceProject.Models.Cab", b =>
                {
                    b.Property<int>("CabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabId"), 1L, 1);

                    b.Property<string>("CabName")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CabNumber")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<bool>("Engine_Type")
                        .HasColumnType("bit");

                    b.Property<bool>("Fuelled")
                        .HasColumnType("bit");

                    b.Property<byte>("No_of_Seats")
                        .HasColumnType("tinyint");

                    b.Property<bool>("Vehicle_Status")
                        .HasColumnType("bit");

                    b.HasKey("CabId");

                    b.ToTable("CabsTable");
                });

            modelBuilder.Entity("CarManagementServiceProject.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<long>("Alt_PhoneNumber")
                        .HasColumnType("Bigint");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("Bigint");

                    b.HasKey("DriverId");

                    b.ToTable("DriversTable");
                });

            modelBuilder.Entity("CarManagementServiceProject.Models.EmployeeDropDetails", b =>
                {
                    b.Property<int>("DropID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DropID"), 1L, 1);

                    b.Property<TimeSpan>("ActualDrop")
                        .HasColumnType("Time");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RaidId")
                        .HasColumnType("int");

                    b.HasKey("DropID");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RaidId");

                    b.ToTable("EmployeeDropDetailsTable");
                });

            modelBuilder.Entity("CarManagementServiceProject.Models.EmployeePickUpDetails", b =>
                {
                    b.Property<int>("PickUpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PickUpID"), 1L, 1);

                    b.Property<TimeSpan>("ActualPickUp")
                        .HasColumnType("Time");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ExpectedPickUp")
                        .HasColumnType("Time");

                    b.Property<int>("RideId")
                        .HasColumnType("int");

                    b.HasKey("PickUpID");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RideId");

                    b.ToTable("EmployeePickUpDetailsTable");
                });

            modelBuilder.Entity("CarManagementServiceProject.Models.RegisteredEmployee", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

                    b.Property<bool>("DropStatus")
                        .HasColumnType("bit");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmployeePhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("LandMark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PickUpStatus")
                        .HasColumnType("bit");

                    b.HasKey("Key");

                    b.ToTable("RegisteredEmployees");
                });

            modelBuilder.Entity("CarManagementServiceProject.Models.AssignedDriverAndCab", b =>
                {
                    b.HasOne("CarManagementServiceProject.Models.Cab", "Cab")
                        .WithMany()
                        .HasForeignKey("CabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarManagementServiceProject.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cab");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("CarManagementServiceProject.Models.EmployeeDropDetails", b =>
                {
                    b.HasOne("CarManagementServiceProject.Models.RegisteredEmployee", "registeredEmployee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarManagementServiceProject.Models.AssignedDriverAndCab", "assignedDriverAndCab")
                        .WithMany()
                        .HasForeignKey("RaidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("assignedDriverAndCab");

                    b.Navigation("registeredEmployee");
                });

            modelBuilder.Entity("CarManagementServiceProject.Models.EmployeePickUpDetails", b =>
                {
                    b.HasOne("CarManagementServiceProject.Models.RegisteredEmployee", "registeredEmployee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarManagementServiceProject.Models.AssignedDriverAndCab", "assignedDriverAndCab")
                        .WithMany()
                        .HasForeignKey("RideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("assignedDriverAndCab");

                    b.Navigation("registeredEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
